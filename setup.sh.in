#!/bin/sh

print_help(){
    cat << HELPMSG
Usage : $0 [--admin|--metro|--sup|--no-verify-pkg|--auto|--default-password [--help|-h]]

Par défaut, installe un serveur avec toutes les options.

Options :
--admin             installe un serveur "Administration Centrale" (expérimental)
--metro             installe un serveur "Stockage de données de métrologie" (expérimental)
--sup               installe un serveur "Collecte de Supervision"
--no-verify-pkg     pas de vérification de la signature des paquets
--auto              pas de confirmation pour l'installation des dépendances des paquets
--default-password  pas de confirmation pour l'utilisation des mots de passe par défaut

HELPMSG
    exit 0
}
while [ -n "$1" ]; do
    case "$1" in
        --help|-h)
            print_help
            ;;
        --admin)
            DO_admin="YES"
            shift
        ;;
        --metro)
            DO_metro="YES"
            shift
        ;;
        --sup)
            DO_sup="YES"
            shift
        ;;
        --no-verify-pkg)
            NO_PKG_CHECK=1
            export NO_PKG_CHECK
            shift
        ;;
        --auto)
            AUTO_INSTALL=1
            export AUTO_INSTALL
            shift
        ;;
        --default-password)
            DEFAULT_PASSWORD="--default-password"
            export DEFAULT_PASSWORD
            shift
        ;;
        *)
            print_help
        ;;
    esac
done

TAG="all"
# Si des options particulières ont été spécifiées,
# on ne traite que les actions qui leur sont associées.
[ -z "$DO_admin" ] || TAG="admin"
[ -z "$DO_metro" ] || TAG="$TAG,metro"
[ -z "$DO_sup"   ] || TAG="$TAG,sup"

# Si toutes les options sont positionnées,
# on effectue tous les traitements.
[ -n "$DO_admin" ] && [ -n "$DO_metro" ] && [ -n "$DO_sup" ] && TAG="all"

# Suppression de "," s'il s'agit du premier caractère.
TAG=${TAG#,}

# Détection de la distribution.
if [ -f /etc/mandriva-release ]; then
    DISTRO=mandriva
    DIST_VER=`sed -e 's/.* release \([0-9]\+\).*/\1/' /etc/mandriva-release`
    DIST_TAG=mes$DIST_VER
elif [ -f /etc/redhat-release ]; then
    DISTRO=redhat
    DIST_VER=`sed -e 's/.* release \([0-9]\+\).*/\1/' /etc/redhat-release`
    DIST_TAG=rhel$DIST_VER
elif [ -f /etc/debian_version ]; then
    DISTRO=debian
    DIST_VER=`sed -e 's/^\([0-9]\+\).*/\1/' /etc/debian_version`
    DIST_TAG=debian$DIST_VER
elif [ -f /etc/gentoo-release ]; then
    DISTRO=gentoo
    DIST_VER=`sed -e 's/.* release \([0-9]\+\).*/\1/' /etc/gentoo-release`
    DIST_TAG=gentoo$DIST_VER
else
    echo "ATTENTION : distribution non supportée."
    echo "Êtes-vous certain de vouloir continuer ? (o/N)"
    read answer
    if [ "$answer" != "o" ]; then
        echo "Abandon à la demande de l'utilisateur."
        exit 0
    fi
    DISTRO=
    DIST_VER=
    DIST_TAG=unknown
fi
export DISTRO DIST_VER DIST_TAG

# Lecture de la conf
CONF=${CONF:-@SYSCONFDIR@/vigilo/setup/setup.conf}

if [ -f $CONF ]; then
    . $CONF
else
    echo "Impossible de trouver $CONF. Abandon."
    exit 1
fi

# Import de la couche de compatibilité.
. $SETUP_MODULES/compat.sh

# Évite que la couche de compatibilité ne redemande
# confirmation sur une distribution non supportée.
FORCE_UNSUPPORTED=1
export FORCE_UNSUPPORTED

# Tous les scripts doivent être idempotents.
# Ils seront lancés depuis leur répertoire.
vigilo_call_script() {
    script=$1
    dir=`dirname $script`
    tag=`cat $dir/TAG 2> /dev/null | sort -u | sed -e 's/ //g' -e '/^$/d' -e '/^#/d'`
    # check if this module is needed
    if [ "$TAG" != "all" ] ; then
        TAG_found="NO"
        for i in "$tag" ; do
            [ -z "$i" ] && return 0
            echo "$TAG" | grep -E -q "$i" && TAG_found="YES"
        done
        if [ "$TAG_found" != "YES" ]; then
            return 0
        fi
    fi
    curdir=`pwd`
    cd "$dir" > /dev/null
    bash ./`basename $script`
    RETVAL=$?
    cd "$curdir" > /dev/null
    if [ $RETVAL != 0 ]; then
        echo "L'exécution du $script a échoué."
        exit $RETVAL
    fi
}

# D'abord, les scripts qui n'utilisent pas les données installées localement.
for script in `ls $SETUP_MODULES/[0-2]*/run.sh 2>/dev/null`; do
    vigilo_call_script $script
done

echo
echo "La suite de ce script va créer les utilisateurs et les bases. C'est le moment de changer les mots de passe par défaut. Pour cela, arrêtez ce script (Ctrl-C), changez les mots de passe dans /etc/vigilo/*/settings.ini et relancez ce script. Appuyez sur Entrée pour continuer avec les mots de passe par défaut." | fmt
[ -z "$DEFAULT_PASSWORD" ] && read unused

# Ensuite, les scripts qui utilisent les données de configuration locales
# (notamment les mots de passe).
for script in `ls $SETUP_MODULES/[3-9]*/run.sh 2>/dev/null`; do
    vigilo_call_script $script
done

if [ "$TAG" = "all" ]; then
    echo
    echo "Maintenant, vérifiez dans /var/log/messages que tout s'est bien passé. Nagios devrait tourner."
    echo "VigiBoard est accessible sur http://`hostname -f`/vigilo/vigiboard/"
    echo "VigiMap est accessible sur http://`hostname -f`/vigilo/vigimap/"
    echo "VigiGraph est accessible sur http://`hostname -f`/vigilo/vigigraph/"
    echo "Nagios est accessible sur http://`hostname -f`/nagios/ avec le login \"nagios\" et le mot de passe \""`cat /etc/nagios/passwd.plaintext`"\""
fi

echo "$TAG" | grep -E -q "sup"
if [ "$?" = "0" ]; then
    echo
    echo "Maintenant, vérifiez dans /var/log/messages que tout s'est bien passé. Nagios devrait tourner."
    echo "Nagios est accessible sur http://`hostname -f`/nagios/ avec le login \"nagios\" et le mot de passe \"`cat /etc/nagios/passwd.plaintext`\" "
    echo "Pensez à régler ce mot de passe dans les fichiers settings.ini des interfaces web."
fi

echo "$TAG" | grep -E -q "admin"
if [ "$?" = "0" ]; then
    echo
    echo "Maintenant, vérifiez dans /var/log/messages que tout s'est bien passé."
    echo "VigiBoard est accessible sur http://`hostname -f`/vigilo/vigiboard/"
    echo "VigiMap est accessible sur http://`hostname -f`/vigilo/vigimap/"
    echo "VigiGraph est accessible sur http://`hostname -f`/vigilo/vigigraph/"
fi

echo "$TAG" | grep -E -q "metro"
if [ "$?" = "0" ]; then
    echo
    echo "Maintenant, vérifiez dans /var/log/messages que tout s'est bien passé."
    echo "VigiRRD est accessible sur http://`hostname -f`/vigilo/vigirrd/"
fi

#TODO remplacer automatiquement les noms des serveurs dans les fichiers de configuration
#echo "Veuillez entrer l'adresse du serveur d'administation Centrale"
#echo "Veuillez entrer l'adresse du serveur de stockage des données de métrologie"
#echo "Veuillez entrer l'adresse du serveur de supervision"

# vim: set et sw=4 ts=4:
